
  
#include <avr/io.h>
#include <stdlib.h>
#include <string.h>
#include <util/delay.h>
 
#ifndef _BV
#define _BV(bit)        (1<<(bit))
#endif
#ifndef sbi
#define sbi(reg,bit)    reg |= (_BV(bit))
#endif
 
#ifndef cbi
#define cbi(reg,bit)    reg &= ~(_BV(bit))
#endif
 
#ifndef tbi
#define tbi(reg,bit)    reg ^= (_BV(bit))
#endif
 
int main() {

DDRD=0xFF;
PORTD=0x00;
DDRB=0x00;
PORTB=0xFF;

bool button_state = 0;

while (1) {
      bool current_button_state = bit_is_clear(PINB, 1);

        if (current_button_state != button_state) {
            button_state = current_button_state;

            if (button_state == 0) {
                tbi(PORTD, 1);
              _delay_ms(20);
            }
        }
      if(bit_is_clear(PINB, 0)){
        _delay_ms(20);
        sbi(PORTD, 0);
      }
      else{
        _delay_ms(20);
        cbi(PORTD, 0);
      }
    }
}

